{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":8977796,"sourceType":"datasetVersion","datasetId":5405844}],"dockerImageVersionId":30746,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","execution":{"iopub.status.busy":"2024-07-18T21:18:34.928522Z","iopub.execute_input":"2024-07-18T21:18:34.928935Z","iopub.status.idle":"2024-07-18T21:18:34.945054Z","shell.execute_reply.started":"2024-07-18T21:18:34.928901Z","shell.execute_reply":"2024-07-18T21:18:34.944029Z"},"trusted":true},"execution_count":262,"outputs":[{"name":"stdout","text":"/kaggle/input/electric-vehicle-population-dataset/Electric_Vehicle_Population_Data.csv\n","output_type":"stream"}]},{"cell_type":"code","source":"import seaborn as sns\nimport matplotlib.pyplot as plt\nfrom matplotlib.patheffects import withStroke","metadata":{"execution":{"iopub.status.busy":"2024-07-18T21:18:34.947384Z","iopub.execute_input":"2024-07-18T21:18:34.947910Z","iopub.status.idle":"2024-07-18T21:18:34.953258Z","shell.execute_reply.started":"2024-07-18T21:18:34.947866Z","shell.execute_reply":"2024-07-18T21:18:34.952183Z"},"trusted":true},"execution_count":263,"outputs":[]},{"cell_type":"code","source":"df = pd.read_csv(\"/kaggle/input/electric-vehicle-population-dataset/Electric_Vehicle_Population_Data.csv\")","metadata":{"execution":{"iopub.status.busy":"2024-07-18T21:18:34.961693Z","iopub.execute_input":"2024-07-18T21:18:34.962018Z","iopub.status.idle":"2024-07-18T21:18:35.680796Z","shell.execute_reply.started":"2024-07-18T21:18:34.961991Z","shell.execute_reply":"2024-07-18T21:18:35.679837Z"},"trusted":true},"execution_count":264,"outputs":[]},{"cell_type":"code","source":"df.head()","metadata":{"execution":{"iopub.status.busy":"2024-07-18T21:18:35.682398Z","iopub.execute_input":"2024-07-18T21:18:35.682724Z","iopub.status.idle":"2024-07-18T21:18:35.702246Z","shell.execute_reply.started":"2024-07-18T21:18:35.682696Z","shell.execute_reply":"2024-07-18T21:18:35.701240Z"},"trusted":true},"execution_count":265,"outputs":[{"execution_count":265,"output_type":"execute_result","data":{"text/plain":"   VIN (1-10)     County     City State  Postal Code  Model Year    Make  \\\n0  5YJSA1E22K       King  Seattle    WA      98112.0        2019   TESLA   \n1  3MW39FS05R     Yakima   Zillah    WA      98953.0        2024     BMW   \n2  1N4AZ0CP0F       King     Kent    WA      98031.0        2015  NISSAN   \n3  5YJSA1H20F  Snohomish  Bothell    WA      98012.0        2015   TESLA   \n4  JTMAB3FV1N     Yakima   Yakima    WA      98908.0        2022  TOYOTA   \n\n        Model                   Electric Vehicle Type  \\\n0     MODEL S          Battery Electric Vehicle (BEV)   \n1        330E  Plug-in Hybrid Electric Vehicle (PHEV)   \n2        LEAF          Battery Electric Vehicle (BEV)   \n3     MODEL S          Battery Electric Vehicle (BEV)   \n4  RAV4 PRIME  Plug-in Hybrid Electric Vehicle (PHEV)   \n\n  Clean Alternative Fuel Vehicle (CAFV) Eligibility  Electric Range  \\\n0           Clean Alternative Fuel Vehicle Eligible             270   \n1             Not eligible due to low battery range              20   \n2           Clean Alternative Fuel Vehicle Eligible              84   \n3           Clean Alternative Fuel Vehicle Eligible             208   \n4           Clean Alternative Fuel Vehicle Eligible              42   \n\n   Base MSRP  Legislative District  DOL Vehicle ID  \\\n0          0                  43.0       202233958   \n1          0                  15.0       264425178   \n2          0                  11.0       114962025   \n3          0                   1.0       232724670   \n4          0                  14.0       221023589   \n\n                  Vehicle Location  \\\n0    POINT (-122.300312 47.629782)   \n1  POINT (-120.2658133 46.4063477)   \n2    POINT (-122.201564 47.402358)   \n3    POINT (-122.206146 47.839957)   \n4    POINT (-120.611068 46.596645)   \n\n                                Electric Utility  2020 Census Tract  \n0   CITY OF SEATTLE - (WA)|CITY OF TACOMA - (WA)       5.303301e+10  \n1                                     PACIFICORP       5.307700e+10  \n2  PUGET SOUND ENERGY INC||CITY OF TACOMA - (WA)       5.303303e+10  \n3                         PUGET SOUND ENERGY INC       5.306105e+10  \n4                                     PACIFICORP       5.307700e+10  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>VIN (1-10)</th>\n      <th>County</th>\n      <th>City</th>\n      <th>State</th>\n      <th>Postal Code</th>\n      <th>Model Year</th>\n      <th>Make</th>\n      <th>Model</th>\n      <th>Electric Vehicle Type</th>\n      <th>Clean Alternative Fuel Vehicle (CAFV) Eligibility</th>\n      <th>Electric Range</th>\n      <th>Base MSRP</th>\n      <th>Legislative District</th>\n      <th>DOL Vehicle ID</th>\n      <th>Vehicle Location</th>\n      <th>Electric Utility</th>\n      <th>2020 Census Tract</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>5YJSA1E22K</td>\n      <td>King</td>\n      <td>Seattle</td>\n      <td>WA</td>\n      <td>98112.0</td>\n      <td>2019</td>\n      <td>TESLA</td>\n      <td>MODEL S</td>\n      <td>Battery Electric Vehicle (BEV)</td>\n      <td>Clean Alternative Fuel Vehicle Eligible</td>\n      <td>270</td>\n      <td>0</td>\n      <td>43.0</td>\n      <td>202233958</td>\n      <td>POINT (-122.300312 47.629782)</td>\n      <td>CITY OF SEATTLE - (WA)|CITY OF TACOMA - (WA)</td>\n      <td>5.303301e+10</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>3MW39FS05R</td>\n      <td>Yakima</td>\n      <td>Zillah</td>\n      <td>WA</td>\n      <td>98953.0</td>\n      <td>2024</td>\n      <td>BMW</td>\n      <td>330E</td>\n      <td>Plug-in Hybrid Electric Vehicle (PHEV)</td>\n      <td>Not eligible due to low battery range</td>\n      <td>20</td>\n      <td>0</td>\n      <td>15.0</td>\n      <td>264425178</td>\n      <td>POINT (-120.2658133 46.4063477)</td>\n      <td>PACIFICORP</td>\n      <td>5.307700e+10</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>1N4AZ0CP0F</td>\n      <td>King</td>\n      <td>Kent</td>\n      <td>WA</td>\n      <td>98031.0</td>\n      <td>2015</td>\n      <td>NISSAN</td>\n      <td>LEAF</td>\n      <td>Battery Electric Vehicle (BEV)</td>\n      <td>Clean Alternative Fuel Vehicle Eligible</td>\n      <td>84</td>\n      <td>0</td>\n      <td>11.0</td>\n      <td>114962025</td>\n      <td>POINT (-122.201564 47.402358)</td>\n      <td>PUGET SOUND ENERGY INC||CITY OF TACOMA - (WA)</td>\n      <td>5.303303e+10</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>5YJSA1H20F</td>\n      <td>Snohomish</td>\n      <td>Bothell</td>\n      <td>WA</td>\n      <td>98012.0</td>\n      <td>2015</td>\n      <td>TESLA</td>\n      <td>MODEL S</td>\n      <td>Battery Electric Vehicle (BEV)</td>\n      <td>Clean Alternative Fuel Vehicle Eligible</td>\n      <td>208</td>\n      <td>0</td>\n      <td>1.0</td>\n      <td>232724670</td>\n      <td>POINT (-122.206146 47.839957)</td>\n      <td>PUGET SOUND ENERGY INC</td>\n      <td>5.306105e+10</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>JTMAB3FV1N</td>\n      <td>Yakima</td>\n      <td>Yakima</td>\n      <td>WA</td>\n      <td>98908.0</td>\n      <td>2022</td>\n      <td>TOYOTA</td>\n      <td>RAV4 PRIME</td>\n      <td>Plug-in Hybrid Electric Vehicle (PHEV)</td>\n      <td>Clean Alternative Fuel Vehicle Eligible</td>\n      <td>42</td>\n      <td>0</td>\n      <td>14.0</td>\n      <td>221023589</td>\n      <td>POINT (-120.611068 46.596645)</td>\n      <td>PACIFICORP</td>\n      <td>5.307700e+10</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"df.info()","metadata":{"execution":{"iopub.status.busy":"2024-07-18T21:18:35.703467Z","iopub.execute_input":"2024-07-18T21:18:35.703769Z","iopub.status.idle":"2024-07-18T21:18:35.809362Z","shell.execute_reply.started":"2024-07-18T21:18:35.703743Z","shell.execute_reply":"2024-07-18T21:18:35.808152Z"},"trusted":true},"execution_count":266,"outputs":[{"name":"stdout","text":"<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 191407 entries, 0 to 191406\nData columns (total 17 columns):\n #   Column                                             Non-Null Count   Dtype  \n---  ------                                             --------------   -----  \n 0   VIN (1-10)                                         191407 non-null  object \n 1   County                                             191403 non-null  object \n 2   City                                               191403 non-null  object \n 3   State                                              191407 non-null  object \n 4   Postal Code                                        191403 non-null  float64\n 5   Model Year                                         191407 non-null  int64  \n 6   Make                                               191407 non-null  object \n 7   Model                                              191407 non-null  object \n 8   Electric Vehicle Type                              191407 non-null  object \n 9   Clean Alternative Fuel Vehicle (CAFV) Eligibility  191407 non-null  object \n 10  Electric Range                                     191407 non-null  int64  \n 11  Base MSRP                                          191407 non-null  int64  \n 12  Legislative District                               190993 non-null  float64\n 13  DOL Vehicle ID                                     191407 non-null  int64  \n 14  Vehicle Location                                   191399 non-null  object \n 15  Electric Utility                                   191403 non-null  object \n 16  2020 Census Tract                                  191403 non-null  float64\ndtypes: float64(3), int64(4), object(10)\nmemory usage: 24.8+ MB\n","output_type":"stream"}]},{"cell_type":"code","source":"df = df.dropna(how='all')  #nao ha linhas totalmente com NaN","metadata":{"execution":{"iopub.status.busy":"2024-07-18T21:18:35.811648Z","iopub.execute_input":"2024-07-18T21:18:35.812000Z","iopub.status.idle":"2024-07-18T21:18:35.918415Z","shell.execute_reply.started":"2024-07-18T21:18:35.811966Z","shell.execute_reply":"2024-07-18T21:18:35.917427Z"},"trusted":true},"execution_count":267,"outputs":[]},{"cell_type":"code","source":"df.info()","metadata":{"execution":{"iopub.status.busy":"2024-07-18T21:18:35.919960Z","iopub.execute_input":"2024-07-18T21:18:35.920373Z","iopub.status.idle":"2024-07-18T21:18:36.020243Z","shell.execute_reply.started":"2024-07-18T21:18:35.920338Z","shell.execute_reply":"2024-07-18T21:18:36.019144Z"},"trusted":true},"execution_count":268,"outputs":[{"name":"stdout","text":"<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 191407 entries, 0 to 191406\nData columns (total 17 columns):\n #   Column                                             Non-Null Count   Dtype  \n---  ------                                             --------------   -----  \n 0   VIN (1-10)                                         191407 non-null  object \n 1   County                                             191403 non-null  object \n 2   City                                               191403 non-null  object \n 3   State                                              191407 non-null  object \n 4   Postal Code                                        191403 non-null  float64\n 5   Model Year                                         191407 non-null  int64  \n 6   Make                                               191407 non-null  object \n 7   Model                                              191407 non-null  object \n 8   Electric Vehicle Type                              191407 non-null  object \n 9   Clean Alternative Fuel Vehicle (CAFV) Eligibility  191407 non-null  object \n 10  Electric Range                                     191407 non-null  int64  \n 11  Base MSRP                                          191407 non-null  int64  \n 12  Legislative District                               190993 non-null  float64\n 13  DOL Vehicle ID                                     191407 non-null  int64  \n 14  Vehicle Location                                   191399 non-null  object \n 15  Electric Utility                                   191403 non-null  object \n 16  2020 Census Tract                                  191403 non-null  float64\ndtypes: float64(3), int64(4), object(10)\nmemory usage: 24.8+ MB\n","output_type":"stream"}]},{"cell_type":"code","source":"","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"colunas = df.columns\nfor i, coluna in enumerate(colunas):\n    print(coluna,\" - valores unicos = \",df[coluna].nunique(),\"\\n\" , df[coluna].value_counts(),\"\\n\")\n    ","metadata":{"execution":{"iopub.status.busy":"2024-07-18T21:18:36.021682Z","iopub.execute_input":"2024-07-18T21:18:36.022123Z","iopub.status.idle":"2024-07-18T21:18:36.375821Z","shell.execute_reply.started":"2024-07-18T21:18:36.022067Z","shell.execute_reply":"2024-07-18T21:18:36.374739Z"},"trusted":true},"execution_count":269,"outputs":[{"name":"stdout","text":"VIN (1-10)  - valores unicos =  11487 \n VIN (1-10)\n7SAYGDEE6P    1236\n7SAYGDEE7P    1220\n7SAYGDEE8P    1187\n7SAYGDEE5P    1184\n7SAYGDEEXP    1175\n              ... \nKMHC75LD6K       1\n1G1RB6S5XK       1\nYV4BR00Z5N       1\nJN1DF0BB4R       1\n3MW5P7J05M       1\nName: count, Length: 11487, dtype: int64 \n\nCounty  - valores unicos =  197 \n County\nKing          99076\nSnohomish     22643\nPierce        14932\nClark         11335\nThurston       6969\n              ...  \nNew York          1\nMiami-Dade        1\nMobile            1\nBeaufort          1\nPitt              1\nName: count, Length: 197, dtype: int64 \n\nCity  - valores unicos =  744 \n City\nSeattle                    31436\nBellevue                    9582\nRedmond                     6883\nVancouver                   6744\nBothell                     6278\n                           ...  \nHolloman Air Force Base        1\nRosamond                       1\nNewbury Park                   1\nSaratoga Springs               1\nFremont                        1\nName: count, Length: 744, dtype: int64 \n\nState  - valores unicos =  46 \n State\nWA    190993\nCA       107\nVA        53\nMD        32\nTX        25\nCO        16\nNC        15\nIL        14\nAZ        13\nNV         9\nFL         9\nNY         8\nNJ         8\nHI         8\nOR         7\nCT         7\nAL         7\nSC         7\nUT         6\nGA         6\nMO         5\nID         4\nOH         4\nLA         4\nDC         3\nIN         3\nPA         3\nKY         3\nKS         3\nMA         3\nBC         3\nAR         2\nMI         2\nRI         2\nNE         2\nAK         1\nMT         1\nOK         1\nDE         1\nIA         1\nNH         1\nNM         1\nMN         1\nWY         1\nAE         1\nWI         1\nName: count, dtype: int64 \n\nPostal Code  - valores unicos =  892 \n Postal Code\n98052.0    4858\n98012.0    3585\n98188.0    3240\n98033.0    3228\n98006.0    3051\n           ... \n92106.0       1\n92585.0       1\n80104.0       1\n95903.0       1\n97215.0       1\nName: count, Length: 892, dtype: int64 \n\nModel Year  - valores unicos =  23 \n Model Year\n2023    60084\n2022    28116\n2021    19531\n2024    16963\n2018    14340\n2020    12149\n2019    10933\n2017     8650\n2016     5528\n2015     4818\n2013     4363\n2014     3533\n2012     1595\n2011      736\n2010       24\n2008       21\n2000        7\n2025        6\n1999        5\n2002        2\n1998        1\n1997        1\n2003        1\nName: count, dtype: int64 \n\nMake  - valores unicos =  42 \n Make\nTESLA                   84670\nCHEVROLET               14321\nNISSAN                  14239\nFORD                    10048\nKIA                      8671\nBMW                      7993\nTOYOTA                   7181\nVOLKSWAGEN               5408\nJEEP                     4996\nHYUNDAI                  4977\nRIVIAN                   4751\nVOLVO                    4469\nAUDI                     3890\nCHRYSLER                 3393\nMERCEDES-BENZ            1784\nPORSCHE                  1182\nMITSUBISHI                996\nMINI                      984\nSUBARU                    970\nPOLESTAR                  939\nHONDA                     857\nFIAT                      781\nDODGE                     619\nMAZDA                     581\nLEXUS                     567\nCADILLAC                  552\nLINCOLN                   281\nLUCID                     263\nSMART                     259\nJAGUAR                    234\nGENESIS                   219\nFISKER                    181\nLAND ROVER                 60\nALFA ROMEO                 56\nGMC                        11\nAZURE DYNAMICS              8\nTH!NK                       5\nWHEEGO ELECTRIC CARS        3\nBENTLEY                     3\nROLLS ROYCE                 2\nRAM                         2\nACURA                       1\nName: count, dtype: int64 \n\nModel  - valores unicos =  147 \n Model\nMODEL Y        39521\nMODEL 3        30978\nLEAF           13439\nMODEL S         7869\nBOLT EV         6444\n               ...  \nZDX                1\n918                1\n750E               1\nS-10 PICKUP        1\nBENTAYGA           1\nName: count, Length: 147, dtype: int64 \n\nElectric Vehicle Type  - valores unicos =  2 \n Electric Vehicle Type\nBattery Electric Vehicle (BEV)            149687\nPlug-in Hybrid Electric Vehicle (PHEV)     41720\nName: count, dtype: int64 \n\nClean Alternative Fuel Vehicle (CAFV) Eligibility  - valores unicos =  3 \n Clean Alternative Fuel Vehicle (CAFV) Eligibility\nEligibility unknown as battery range has not been researched    102133\nClean Alternative Fuel Vehicle Eligible                          68785\nNot eligible due to low battery range                            20489\nName: count, dtype: int64 \n\nElectric Range  - valores unicos =  103 \n Electric Range\n0      102133\n215      6415\n32       4476\n25       4290\n220      4047\n        ...  \n11          3\n95          3\n51          2\n46          2\n57          2\nName: count, Length: 103, dtype: int64 \n\nBase MSRP  - valores unicos =  31 \n Base MSRP\n0         188069\n69900       1361\n31950        376\n52900        217\n32250        143\n59900        130\n54950        127\n39995        112\n36900        108\n44100         96\n64950         85\n45600         81\n34995         69\n52650         69\n33950         68\n36800         54\n55700         51\n53400         42\n81100         22\n110950        21\n98950         21\n90700         19\n75095         13\n102000        11\n184400        10\n89100          9\n43700          8\n109000         6\n91250          5\n32995          3\n845000         1\nName: count, dtype: int64 \n\nLegislative District  - valores unicos =  49 \n Legislative District\n41.0    12297\n45.0    11372\n48.0    10449\n11.0     8419\n1.0      8329\n5.0      8182\n36.0     7885\n46.0     7291\n43.0     6883\n37.0     5574\n34.0     5537\n18.0     5129\n44.0     5084\n22.0     4747\n21.0     4708\n32.0     4693\n23.0     4107\n40.0     4040\n26.0     3837\n33.0     3560\n47.0     3494\n31.0     3372\n10.0     3260\n17.0     3230\n39.0     2768\n35.0     2690\n27.0     2689\n42.0     2681\n49.0     2671\n24.0     2572\n28.0     2457\n30.0     2289\n2.0      2215\n25.0     2014\n8.0      1994\n38.0     1955\n6.0      1838\n12.0     1785\n20.0     1774\n4.0      1658\n13.0     1365\n29.0     1315\n14.0     1250\n19.0     1142\n9.0      1087\n16.0      972\n3.0       927\n7.0       914\n15.0      492\nName: count, dtype: int64 \n\nDOL Vehicle ID  - valores unicos =  191407 \n DOL Vehicle ID\n202233958    1\n233897744    1\n227407638    1\n266774651    1\n217991805    1\n            ..\n207617693    1\n214734796    1\n152631531    1\n260113955    1\n233761440    1\nName: count, Length: 191407, dtype: int64 \n\nVehicle Location  - valores unicos =  891 \n Vehicle Location\nPOINT (-122.1207376 47.6705374)    4858\nPOINT (-122.206146 47.839957)      3585\nPOINT (-122.271716 47.452837)      3240\nPOINT (-122.1925969 47.676241)     3228\nPOINT (-122.144149 47.560742)      3051\n                                   ... \nPOINT (-117.1627736 33.725296)        1\nPOINT (-104.8367434 39.3603485)       1\nPOINT (-121.3847971 39.1203191)       1\nPOINT (-121.2925231 46.0184108)       1\nPOINT (-122.600874 45.51465)          1\nName: count, Length: 891, dtype: int64 \n\nElectric Utility  - valores unicos =  75 \n Electric Utility\nPUGET SOUND ENERGY INC||CITY OF TACOMA - (WA)                                                                 70546\nPUGET SOUND ENERGY INC                                                                                        38778\nCITY OF SEATTLE - (WA)|CITY OF TACOMA - (WA)                                                                  33567\nBONNEVILLE POWER ADMINISTRATION||PUD NO 1 OF CLARK COUNTY - (WA)                                              11067\nBONNEVILLE POWER ADMINISTRATION||CITY OF TACOMA - (WA)||PENINSULA LIGHT COMPANY                                8446\n                                                                                                              ...  \nBONNEVILLE POWER ADMINISTRATION||CITY OF TACOMA - (WA)||ALDER MUTUAL LIGHT CO, INC|PENINSULA LIGHT COMPANY        2\nCITY OF SEATTLE - (WA)                                                                                            2\nBONNEVILLE POWER ADMINISTRATION||PUD NO 1 OF CLALLAM COUNTY|PUD NO 1 OF JEFFERSON COUNTY                          1\nBONNEVILLE POWER ADMINISTRATION||PENINSULA LIGHT COMPANY                                                          1\nBONNEVILLE POWER ADMINISTRATION||PUD NO 1 OF JEFFERSON COUNTY                                                     1\nName: count, Length: 75, dtype: int64 \n\n2020 Census Tract  - valores unicos =  2137 \n 2020 Census Tract\n5.303303e+10    2693\n5.303303e+10    1074\n5.303303e+10     867\n5.303301e+10     755\n5.306701e+10     711\n                ... \n3.609106e+10       1\n5.181004e+10       1\n1.800300e+10       1\n4.105100e+10       1\n4.105100e+10       1\nName: count, Length: 2137, dtype: int64 \n\n","output_type":"stream"}]},{"cell_type":"code","source":"frequencia_valores = df['State'].value_counts()\n\n# Identificar o valor com a maior frequência\nvalor_maior_frequencia = frequencia_valores.idxmax()\n\n# Filtrar o DataFrame para excluir o valor com a maior frequência\ndf_filtrado = df[df['State'] != valor_maior_frequencia]","metadata":{"execution":{"iopub.status.busy":"2024-07-18T21:18:36.377081Z","iopub.execute_input":"2024-07-18T21:18:36.377423Z","iopub.status.idle":"2024-07-18T21:18:36.414371Z","shell.execute_reply.started":"2024-07-18T21:18:36.377394Z","shell.execute_reply":"2024-07-18T21:18:36.412879Z"},"trusted":true},"execution_count":270,"outputs":[]},{"cell_type":"code","source":"\n\n\nplt.figure(figsize=(12, 6))\nax = sns.countplot(x='State',order=ordem_decrescente, data=df_filtrado, palette='viridis')\n\n# Adicionar rótulos de contagem nas barras\nfor p in ax.patches:\n    ax.annotate(f'{p.get_height()}', \n                (p.get_x() + p.get_width() / 2., \n                 p.get_height()), \n                ha='center', \n                va='center', \n                xytext=(0, 10), \n                textcoords='offset points')\n\nplt.title('Contagem de Valores na State')\nplt.xlabel('States')\nplt.ylabel('Contagem')\nplt.xticks(rotation=45)\nhandles = [plt.Line2D(xdata=[1], \n                      ydata=[1], \n                      marker='*', \n                      color='w', \n                      markerfacecolor='gold', \n                      markersize=18, \n                      label= f\"WA: {frequencia_valores[0]}\"\n                      )\n          ]\n\nplt.legend(handles=handles, \n           loc='upper right', \n           title='Maior valor',\n           fontsize=16, \n           title_fontsize=18, \n           shadow=True)\n\n#plt.legend(loc='upper right', fontsize=14, bbox_to_anchor=(1.15, 1.05), title='Legenda', title_fontsize='13', shadow=True)","metadata":{"execution":{"iopub.status.busy":"2024-07-18T21:18:36.416952Z","iopub.execute_input":"2024-07-18T21:18:36.417394Z","iopub.status.idle":"2024-07-18T21:18:37.230464Z","shell.execute_reply.started":"2024-07-18T21:18:36.417359Z","shell.execute_reply":"2024-07-18T21:18:37.229195Z"},"trusted":true},"execution_count":271,"outputs":[{"name":"stderr","text":"/tmp/ipykernel_33/766708536.py:24: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`\n  label= f\"WA: {frequencia_valores[0]}\"\n","output_type":"stream"},{"execution_count":271,"output_type":"execute_result","data":{"text/plain":"<matplotlib.legend.Legend at 0x7907f289bd60>"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<Figure size 1200x600 with 1 Axes>","image/png":""},"metadata":{}}]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]}]}